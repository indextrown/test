# -*- coding: utf-8 -*-
"""Untitled53.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mrZOEpmfIy9Izk0dLKTTGgkO1RNgA2rl
"""

import pybithumb
import time
import datetime
def get_target_price():                                          #목표가 함수 정의
  df = pybithumb.get_ohlcv("BTC")
  volatility = (df.iloc[-2]['high'] - df.iloc[-2]['low']) * 0.6  #변동폭
  target_price = df.iloc[-1]['open'] + volatility                #목표가
  return target_price  

#매수 기능
def buy_crypto_currency(bithumb, price):                         #buy_crypto_currency 함수 정의
  krw = bithumb.get_balance("BTC")[2]                            #보유하고있는 현금(krw라고 하면 원하 정보를 받을 수 없어 우회적으로 하나의 코인에 대한 정보를 조회해서 인덱싱한다)
  unit = (krw*0.7) / price                                       #원화 나누기 현재가를 하여 수량 정보를 unit로 바인딩
  return bithumb.buy_market_order("BTC", unit)                   #시장가로 주문, 수수료와 마진이 필요하므로 수수료를 땐 70프로만 구매
                                                                 #주문을 실행한 결과를 함수 밖으로 전달 하기 위해 return 사용
#매도 가능
def sell_crypto_currency(bithumb):
  unit = bithumb.get_balance("BTC")[0]                            #get_balance메서드는 튜플로 데이터를 전달하는 데 첫 위치에 잔고 남음
  return bithumb.sell_market_order("BTC", unit)                   #잔고를 얻어왔다면 빗썸 객체에 정의된 sell_market_order 메서드로 특정한 코인을 unit만큼 팔아라 주문 가능
                                                                  #주문을 실행한 결과를 함수 밖으로 전달 하기 위해 return 사용